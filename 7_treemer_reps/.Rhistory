setwd(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/unfit",sep=""))
cats = unqiue(c(cats,unique(unfit$V14)))
cats = unique(c(cats,unique(unfit$V14)))
cats
type="crispr"
setwd(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/unfit",sep=""))
unfit = read.table("all_unfit.csv",sep=",",header=F,stringsAsFactors = F)
cats = unique(unfit$V19)
cats
type="RND_pump"
setwd(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/unfit",sep=""))
unfit = read.table("all_unfit.csv",sep=",",header=F,stringsAsFactors = F)
cats = unique(c(cats,unique(unfit$V14)))
cats
df = data.frame(Cat = cats,RND_pump = rep(0,3),Crispr=rep(0,3))
df = data.frame(Cat = cats,RND_pump = rep(0,length(cats)),Crispr=rep(0,length(cats)))
View(df)
library(dplyr)
library(dplyr)
type="crispr"
setwd(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/unfit",sep=""))
unfit_crispr = read.table("all_unfit.csv",sep=",",header=F,stringsAsFactors = F)
cats = unique(unfit_crispr$V19)
type="RND_pump"
setwd(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/unfit",sep=""))
unfit_pump = read.table("all_unfit.csv",sep=",",header=F,stringsAsFactors = F)
cats = unique(c(cats,unique(unfit_pump$V14)))
df = data.frame(Cat = cats,RND_pump = rep(0,length(cats)),Crispr=rep(0,length(cats)))
View(df)
for (c in cats){
row = which(df$Cat == c)
df$RND_pump[row] = length(which(unfit_pump$V14 == c))
df$Crispr[row] = length(which(unfit_crispr$V19 == c))
}
View(df)
library(reshape)
df.m = melt(df)
View(df.m)
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity')
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity')
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/" + type+ "/results/combo",sep=""))
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/", type, "/results/combo",sep=""))
file_names
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/", type, "/results/combo",sep=""),pattern = "*.txt")
file_names
final_all <- do.call(rbind,lapply(file_names,read.table,header=T))
setwd(paste("/Users/gh11/posh/e_coli_collection/", type, "/results/combo",sep=""))
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/", type, "/results/combo",sep=""),pattern = "*.txt")
final_all <- do.call(rbind,lapply(file_names,read.table,header=T))
View(unfit_crispr)
setwd(paste("/Users/gh11/posh/e_coli_collection/", type, "/results/combo",sep=""))
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/", type, "/results/combo",sep=""),pattern = "*.txt")
file_names
read.table(file_names[1])
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/", type, "/results/combo",sep=""),pattern = "*.txt")
final_all <- do.call(rbind,lapply(file_names,read.table,header=T,sep=","))
View(final_all)
ggplot(final_all, aes(x=Domain, y=Hit_Length)) +
geom_violin()
ggplot(final_all, aes(x=Partner_Length, y=Hit_Length)) +
geom_point()
final_all = cbind(final_all,rep("passed",col = dim(final_all)[2]))
final_all <- do.call(rbind,lapply(file_names,read.table,header=T,sep=","))
final_all$Source = rep("passed",dim(final_all)[2])
cats = unique(unfit_pump$V14)
setwd(paste("/Users/gh11/posh/e_coli_collection/", type, "/results/combo",sep=""))
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/", type, "/results/combo",sep=""),pattern = "*.txt")
final_all <- do.call(rbind,lapply(file_names,read.table,header=T,sep=",",stringsAsFactors=F))
final_all$Source = rep("passed",dim(final_all)[2])
final_all$Source
rep("passed", dim(final_all)[2] )
dim(final_all)
final_all$Source = rep("passed", dim(final_all)[1] )
df = rbind(final_all,unfit_pump)
dim(final_all)
dim(unfit_pump)
View(unfit_pump)
unfit_pump = unfit_pump[,c(-9,-10,-11)]
df = rbind(final_all,unfit_pump)
dim(unfit_pump)
dim(final_all)
final_all <- do.call(rbind,lapply(file_names,read.table,header=T,sep=",",stringsAsFactors=F))
dim(final_all)
df2 = cbind(unfit_pump$V1,unfit_pump$V14)
View(df2)
df2 = cbind(unfit_pump$V5,unfit_pump$V14)
View(df.m)
View(df2)
type="crispr"
setwd(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/unfit",sep=""))
unfit_crispr = read.table("all_unfit.csv",sep=",",header=F,stringsAsFactors = F)
cats = unique(unfit_crispr$V19)
type="RND_pump"
setwd(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/unfit",sep=""))
unfit_pump = read.table("all_unfit.csv",sep=",",header=F,stringsAsFactors = F)
cats = unique(c(cats,unique(unfit_pump$V14)))
df = data.frame(Cat = cats,RND_pump = rep(0,length(cats)),Crispr=rep(0,length(cats)))
for (c in cats){
row = which(df$Cat == c)
df$RND_pump[row] = length(which(unfit_pump$V14 == c))
df$Crispr[row] = length(which(unfit_crispr$V19 == c))
}
df.m = melt(df)
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity')
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity')
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity')
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity') + scale_x_discrete( expand = c(0, 0)) +
theme(axis.text.y = element_blank())+ theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity') + scale_x_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
library(RColorBrewer)
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_manual(values = brewer.pal(2,"Set1"))
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_manual(values = brewer.pal(3,"Set3"))
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_manual(values = brewer.pal(2,"Set3"))
ggplot(df.m, aes(x = Cat, y = value,fill=variable)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_manual(values = brewer.pal(3,"Set2"))
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/combo",sep="")) #where you have your files
file_names
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/combo",sep=""),full.names = T) #where you have your files
file_names
your_data_frame <- do.call(rbind,lapply(file_names,read.csv,header=F,stringsAsFactors = F,sep=","))
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/combo",sep=""),full.names = T,pattern="*.txt") #where you have your files
your_data_frame <- do.call(rbind,lapply(file_names,read.csv,header=F,stringsAsFactors = F,sep=","))
View(your_data_frame)
file_names <- dir(paste("/Users/gh11/posh/e_coli_collection/",type,"/results/combo",sep=""),
full.names = T,pattern="*.txt") #where you have your files
your_data_frame <- do.call(rbind,lapply(file_names,read.csv,header=T,stringsAsFactors = F,sep=","))
lengths = c(unfit_pump$V5,your_data_frame$Hit_Length)
hist(lengths)
abline(v = 900)
abline(v = 1200)
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_manual(values = brewer.pal(3,"Set2"))
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_manual(values = brewer.pal(4,"Set2"))
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_manual(values = brewer.pal(4,"Set1"))
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size = basesize)) +
scale_fill_manual(values = brewer.pal(4,"Set1"))
basesize = 14
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size = basesize)) +
scale_fill_manual(values = brewer.pal(4,"Set1"))
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size = basesize)) +
scale_fill_manual(values = brewer.pal(4,"Set1")) + xlab("") + ylab("Unfit HMM hits") +
scale_fill_discrete(breaks=c("Downstream length","Hit Length","Delta","Upstream Length"))
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size = basesize)) +
scale_fill_manual(values = brewer.pal(4,"Set1")) + xlab("") + ylab("Unfit HMM hits")
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size = basesize)) +
scale_fill_manual(values = brewer.pal(4,"Set1"),breaks=c("Downstream length","Hit Length","Delta","Upstream Length")) +
xlab("") + ylab("Unfit HMM hits")
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size = basesize)) +
scale_fill_manual(values = brewer.pal(4,"Set1"),labels=c("Downstream length","Hit Length","Delta","Upstream Length")) +
xlab("") + ylab("Unfit HMM hits")
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size = basesize),
legend.title=element_blank()) +
scale_fill_manual(values = brewer.pal(4,"Set1"),
labels=c("Downstream length","Hit Length","Delta","Upstream Length")) +
xlab("") + ylab("Unfit HMM hits")
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size = basesize),
legend.title=element_blank()) +
scale_fill_manual(values = brewer.pal(4,"Set1"),
labels=c("Downstream length","Hit Length","Delta","Upstream Length")) +
xlab("") + ylab("#Filtered HMM hits")
ggplot(df.m, aes(x = variable, y = value,fill=Cat)) +
geom_bar(stat='identity') + scale_y_discrete( expand = c(0, 0)) +
theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
text = element_text(size = basesize),
legend.title=element_blank()) +
scale_fill_manual(values = brewer.pal(4,"Set1"),
labels=c("Downstream length","Hit Length","Delta","Upstream Length")) +
xlab("") + ylab("Filtered HMM hits")
unfit_RND =  read.table("/Users/gh11/posh/e_coli_collection/RND_pump_flex/unfit/1UNFIT_(1H).txt",
sep=",",stringsAsFactors = F, header = T)
View(unfit_RND)
which(unfit_RND$Reason1 == "hit length")
length(which(unfit_RND$Reason1 == "hit length"))
length(which(unfit_RND$Reason1 == "Upstream length"))
length(which(unfit_RND$Reason1 == "No adjacent upstream ORF"))
unfit_RND$Hit_Length[which(unfit_RND$Reason1 == "hit length")]
hist(unfit_RND$Hit_Length[which(unfit_RND$Reason1 == "hit length")])
max(unfit_RND$Hit_Length[which(unfit_RND$Reason1 == "hit length")])
min(unfit_RND$Hit_Length[which(unfit_RND$Reason1 == "hit length")])
toxins = read.table("/Users/gh11/Toxin_Antitoxin_Systems/klebsiella_diverse/results/combo/combo_matrix.txt",
sep=",",header=T,row.names = 1)
toxins = read.table("/Users/gh11/Toxin_Antitoxin_Systems/klebsiella_diverse/results/combo/matrix_combo.txt",
sep=",",header=T,row.names = 1)
toxins = read.table("/Users/gh11/Toxin_Antitoxin_Systems/klebsiella_diverse/results/combo/matrix_combo.txt",
sep=",",header=T,row.names = 1,comment.char = "")
View(toxins)
toxins.pca = prcomp(toxins,center = TRUE, scale. = TRUE)
toxins = read.table("/Users/gh11/Toxin_Antitoxin_Systems/klebsiella_diverse/results/combo/matrix_combo.txt",
sep=",",header=T,row.names = 1,comment.char = "")
toxins.pca = prcomp(toxins,center = TRUE, scale. = TRUE)
toxins.pca = prcomp(toxins,center = TRUE, scale. = TRUE, tol = 0)
toxins.pca = prcomp(toxins,center = TRUE, scale. = TRUE, tol = sqrt(.Machine$double.eps))
toxins[,sapply(toxins, function(v) var(v, na.rm=TRUE)!=0)]
toxins_test = toxins[,sapply(toxins, function(v) var(v, na.rm=TRUE)!=0)]
toxins.pca = prcomp(toxins_test,center = TRUE, scale. = TRUE)
plot(toxins.pca$x[,c(1,2)],cex=1.2,lwd=2,pch=16)
metadata = read.table("/Users/gh11/Toxin_Antitoxin_Systems/klebsiella_diverse/metadata.csv",sep=",",header = T, comment.char = "")
metadata$Strain
metadata = metadata[match(rownames(toxins.pca$x),metadata$Strain),]
col_array = brewer.pal(4,"Set2")
library(RColorBrewer)
col_array = brewer.pal(4,"Set2")
col = as.character(unlist(metadata$Phylogroup))
col
col = replace(col, col=="kpi", col_array[1])
col = replace(col, col=="kpii", col_array[2])
col = replace(col, col=="kpiii", col_array[3])
col = replace(col, col=="kpiv", col_array[4])
col
plot(toxins.pca$x[,c(1,2)],cex=1.2,lwd=2,pch=16,col = col)
legend("topright",legend = c("KpI","KpII","KpIII","KpIV"), col = col_array,pch=16)
plot(toxins.pca$x[,c(2,3)],cex=1.2,lwd=2,pch=16,col = col)
legend("topright",legend = c("KpI","KpII","KpIII","KpIV"), col = col_array,pch=16)
plot(toxins.pca$x[,c(1,3)],cex=1.2,lwd=2,pch=16,col = col)
plot(toxins.pca$x[,c(1,2)],cex=1.2,lwd=2,pch=16,col = col)
plot(toxins.pca$x[,c(3,4)],cex=1.2,lwd=2,pch=16,col = col)
plot(toxins.pca$x[,c(3,1)],cex=1.2,lwd=2,pch=16,col = col)
plot(toxins.pca$x[,c(1,2)],cex=1.2,lwd=2,pch=16,col = col)
plot(toxins.pca$x[,c(2,1)],cex=1.2,lwd=2,pch=16,col = col)
display.brewer.all(5)
display.brewer.all(10)
display.brewer.all(8)
col_array = brewer.pal(8,"Dark2")
col = as.character(unlist(metadata$Phylogroup))
col = replace(col, col=="kpi", col_array[1])
col = replace(col, col=="kpii", col_array[3])
col = replace(col, col=="kpiii", col_array[4])
col = replace(col, col=="kpiv", col_array[2])
#style(better)
#par(mfrow=c(1,1))
plot(toxins.pca$x[,c(2,1)],cex=1.2,lwd=2,pch=16,col = col)
legend("topright",legend = c("KpI","KpII","KpIII","KpIV"), col = col_array[c(1,3,4,2)],pch=16)
plot(toxins.pca$x[,c(1,2)],cex=1.2,lwd=2,pch=16,col = col)
legend("topright",legend = c("KpI","KpII","KpIII","KpIV"), col = col_array[c(1,3,4,2)],pch=16)
col = as.character(unlist(metadata$Acquisition))
col
col_array = brewer.pal(8,"Dark2")
col = as.character(unlist(metadata$Acquisition))
col = replace(col, col=="nosocomial", col_array[1])
col = replace(col, col=="community", col_array[3])
col = replace(col, col=="unknown", col_array[4])
col = replace(col, col=="kpiv", col_array[2])
#style(better)
#par(mfrow=c(1,1))
plot(toxins.pca$x[,c(1,2)],cex=1.2,lwd=2,pch=16,col = col)
plot(toxins.pca$x[,c(2,3)],cex=1.2,lwd=2,pch=16,col = col)
plot(toxins.pca$x[,c(3,4)],cex=1.2,lwd=2,pch=16,col = col)
plot(toxins.pca$x[,c(4,5)],cex=1.2,lwd=2,pch=16,col = col)
plot(toxins.pca$x[,c(1,2)],cex=1.2,lwd=2,pch=16,col = col)
toxins[,1]
View(toxins)
plot(toxins[,1])
read.newick()
install.packages("phytools")
library(phytools)
read.tree("/Users/gh11/Toxin_Antitoxin_Systems/klebsiella_diverse/prev/tree/klebsiella_diverse_tree")
tree = read.tree("/Users/gh11/Toxin_Antitoxin_Systems/klebsiella_diverse/prev/tree/klebsiella_diverse_tree")
tree$tip.label
tree$node.label
tree$edge.length
plot(tree)
tree$edge.length
dim(tree$edge.length)
length(tree$edge.length)
tree$Nnode
tree$edge
dim(tree$edge)
length(tree$edge.length)
edges = cbind(tree$edge,tree$edge.length)
View(edges)
colnames(edges) = c("Node 1","Node 2", "Weight")
edges = cbind(tree$edge,tree$edge.length)
colnames(edges) = c("Node 1","Node 2", "Weight")
edges = cbind(tree$edge,tree$edge.length)
colnames(edges)
header(edges)
edges = data.frame(cbind(tree$edge,tree$edge.length))
colnames(edges) = c("Node 1","Node 2", "Weight")
edges = data.frame(cbind(tree$edge,tree$edge.length))
colnames(edges) = c("Node_1","Node_2", "Weight")
mrca = mrca(tree)
mrca
dim(mrca)
mrca[1,]
mrca[2,]
mrca[3,]
mrca[4,]
mrca = mrca(tree,full=TRUE)
mrca[1,]
mrca
dim(mrca)
dim(toxins)
TA_dist_mat = matrix(0 , nrow = 260, ncol = 260)
View(TA_dist_mat)
TA_dist_mat = matrix(0 , nrow = 260, ncol = 260,rownames = metadata$Strain)
TA_dist_mat = data.frame(matrix(0 , nrow = 260, ncol = 260), stringsAsFactors = F )
row.names(TA_dist_mat) = metadata$Strain
col.names(TA_dist_mat) = metadata$Strain
colnames(TA_dist_mat) = metadata$Strain
View(TA_dist_mat)
View(toxins)
i = 1
j = 2
strain1 = rownames(toxins)[i]
strain2 = rownames(toxins)[j]
strain1
strain2
dist = toxins[i,] - toxins[j,]
dist
dist = abs(toxins[i,] - toxins[j,])
dist
dist = sum(abs(toxins[i,] - toxins[j,]))
dist
TA_dist_mat = data.frame(matrix(0 , nrow = 260, ncol = 260), stringsAsFactors = F )
row.names(TA_dist_mat) = rownames(toxins)
colnames(TA_dist_mat) = rownames(toxins)
for (i in 1:dim(toxins)[1]){
for (j in i:dim(toxins)[1]) {
strain1 = rownames(toxins)[i]
strain2 = rownames(toxins)[j]
dist = sum(abs(toxins[i,] - toxins[j,]))
TA_dist_mat[i,j]
}
}
View(TA_dist_mat)
TA_dist_mat = matrix(0 , nrow = 260, ncol = 260)
TA_dist_mat = matrix(0 , nrow = 260, ncol = 260)
for (i in 1:dim(toxins)[1]){
for (j in i:dim(toxins)[1]) {
if (i!=j){
dist = sum(abs(toxins[i,] - toxins[j,]))
TA_dist_mat[i,j] = dist
print(dist)
}
}
}
View(TA_dist_mat)
TA_dist_mat = matrix(0 , nrow = 260, ncol = 260)
for (i in 1:dim(toxins)[1]){
for (j in i:dim(toxins)[1]) {
if (i!=j){
dist = sum(abs(toxins[i,] - toxins[j,]))
TA_dist_mat[i,j] = dist
TA_dist_mat[j,i] = dist
}
}
}
View(TA_dist_mat)
hist(lower.tri(TA_dist_mat))
hist(as.numeric(unlist(lower.tri(TA_dist_mat))))
lower.tri(TA_dist_mat)
hist(as.numeric(unlist(lower.tri(TA_dist_mat[TA_dist_mat]))))
TA_dist_mat[lower.tri(TA_dist_mat)
]
hist(as.numeric(unlist(TA_dist_mat[lower.tri(TA_dist_mat)])))
hist(as.numeric(unlist(TA_dist_mat)), main = "Distance between every two strains", xlab="Distance")
order = read.table("/Users/gh11/Desktop/new phd prop/order.txt",sep="",comment.char = "")
View(order)
t = rnorm(n = 1000,mean = 100, sd = 10)
hist(t, xlab = "Length",main="", breaks = 25)
library(RColorBrewer)
library(reshape2)
library(gridExtra)
setwd("/Users/gh11/poppunk_pangenome/X_choose_reps/")
pairwise_dists = read.table("pairwise_dists.csv", sep = ",", header = T, stringsAsFactors = F)
View(pairwise_dists)
type = rep("between", dim(pairwise_dists)[1])
type[pairwise_dists$Cluster1 == pairwise_dists$Cluster2] = "within"
pairwise_dists = cbind(pairwise_dists, type)
pairwise_dists = read.table("pairwise_dists.csv", sep = ",", header = T, stringsAsFactors = F)
pairwise_dists = pairwise_dists[-which(pairwise_dists$Mean == "NaN"),]
type = rep("between", dim(pairwise_dists)[1])
type[pairwise_dists$Cluster1 == pairwise_dists$Cluster2] = "within"
pairwise_dists = cbind(pairwise_dists, type)
ggplot(pairwise_dists, aes(x = type, y = mean)) + geom_violin() + geom_boxplot(width = 0.01)
library(ggplot2)
ggplot(pairwise_dists, aes(x = type, y = mean)) + geom_violin() + geom_boxplot(width = 0.01)
ggplot(pairwise_dists, aes(x = type, y = Mean)) + geom_violin() + geom_boxplot(width = 0.01)
ggplot(pairwise_dists, aes(x = type, y = Mean)) + geom_violin() + geom_boxplot(width = 0.01) +
theme_bw(base_size = 16) + xlab("") + ylab("Mean core distance identity")
ggplot(pairwise_dists, aes(x = type, y = Mean)) + geom_violin() + geom_boxplot(fill = "#d2d2d2",width = 0.01) +
theme_bw(base_size = 16) + xlab("") + ylab("Mean core distance identity")
ggplot(pairwise_dists, aes(x = type, y = Mean)) + geom_violin(fill = "#d2d2d2") + geom_boxplot(width = 0.1) +
theme_bw(base_size = 16) + xlab("") + ylab("Mean core distance identity")
ggplot(pairwise_dists, aes(x = cluster1, y = cluster2, fill = Mean)) + geom_tile()
ggplot(pairwise_dists, aes(x = Cluster1, y = Cluster2, fill = Mean)) + geom_tile()
ggplot(pairwise_dists, aes(x = Cluster1, y = Cluster2, fill = Mean)) + geom_tile(color = "black")+
scale_fill_gradient(low = "white", high = "black") + theme_bw(base_size = 12)
pairwise_dists$Cluster1 = factor(pairwise_dists$Cluster1, 1:51)
pairwise_dists$Cluster2 = factor(pairwise_dists$Cluster2, 1:51)
ggplot(pairwise_dists, aes(x = Cluster1, y = Cluster2, fill = Mean)) + geom_tile(color = "black")+
scale_fill_gradient(low = "white", high = "black") + theme_classic(base_size = 12)
ggplot(pairwise_dists, aes(x = Cluster1, y = Cluster2, fill = Mean)) + geom_tile(color = "black")+
scale_fill_gradient(low = "white", high = "black", limits = c(0.8,1)) + theme_classic(base_size = 12)
ggplot(pairwise_dists, aes(x = Cluster1, y = Cluster2, fill = Mean)) + geom_tile(color = "black")+
scale_fill_gradient(low = "white", high = "black", limits = c(0.9,1)) + theme_classic(base_size = 12)
ggplot(pairwise_dists, aes(x = Cluster1, y = Cluster2, fill = Mean)) + geom_tile(color = "black")+
scale_fill_gradient(low = "white", high = "black") + theme_classic(base_size = 12)
ggplot(pairwise_dists, aes(x = type, y = Mean)) + geom_violin(fill = "#d2d2d2") + geom_boxplot(width = 0.1) +
theme_bw(base_size = 16) + xlab("") + ylab("Mean core distance identity")
ggplot(pairwise_dists, aes(x = Mean, y = Min)) + geom_point()
ggplot(pairwise_dists, aes(x = Min, y = Mean)) + geom_point()
ggplot(pairwise_dists, aes(x = Min, y = Mean)) + geom_point(size = 3, alpha = 0.7) +
theme_bw(base_size = 16)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(gridExtra)
setwd("/Users/gh11/poppunk_pangenome/X_choose_reps/")
pairwise_dists = read.table("pairwise_dists.csv", sep = ",", header = T, stringsAsFactors = F)
pairwise_dists = pairwise_dists[-which(pairwise_dists$Mean == "NaN"),]
type = rep("between", dim(pairwise_dists)[1])
type[pairwise_dists$Cluster1 == pairwise_dists$Cluster2] = "within"
pairwise_dists = cbind(pairwise_dists, type)
ggplot(pairwise_dists, aes(x = type, y = Mean)) + geom_violin(fill = "#d2d2d2") + geom_boxplot(width = 0.1) +
theme_bw(base_size = 16) + xlab("") + ylab("Mean core distance identity")
pairwise_dists$Cluster1 = factor(pairwise_dists$Cluster1, 1:51)
pairwise_dists$Cluster2 = factor(pairwise_dists$Cluster2, 1:51)
ggplot(pairwise_dists, aes(x = Cluster1, y = Cluster2, fill = Mean)) + geom_tile(color = "black")+
scale_fill_gradient(low = "white", high = "black") + theme_classic(base_size = 12)
ggplot(pairwise_dists, aes(x = Min, y = Mean)) + geom_point(size = 3, alpha = 0.7) +
theme_bw(base_size = 16)
